/*
 * main.cpp
 *
 *  Created on: 29 kwi 2019
 *      Author: Denis
 */
#include <iostream>
#include <cstdint>

using namespace std;

class point{
public:
	point();
	void setx(double v){
		x=v;
	}
	void sety(double v){
		y=v;
	}
	double getx(){// te dwie funkcje pozwalaja modyfikowac wartosci private!
		return x;
	}
	double gety(){//!
		return y;
	}
private:
	double x,y;
};

point::point(){
	setx(0);
	sety(0);
}

point operator+(point&p1,point&p2){ //pass by reference
	point sum = {
			p1.getx()+p2.getx(),
			p1.gety()+p2.gety()
	};
	return sum;
}

ostream& operator<<(ostream& out, const point& p){//pass by reference
//funkcja wypisania jest konieczna przy tworzeniu wlasnych operatorow
	out<<"("<<p.getx()<<","<<p.gety()<<")";
	return out;
}

int main(){
point a,b;
a.setx(2.3);
a.sety(3.3);
b.setx(2.3);
b.sety(4.4);


cout<<"a="<<a<<", b="<<b<<endl;
cout<<"sum="<<a+b<<endl;

}

